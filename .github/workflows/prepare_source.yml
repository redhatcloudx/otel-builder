name: Prep OTEL source

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.21.6'

      - name: Check golang version
        run: go version

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Clone opentelemetry-collector repository
        uses: actions/checkout@v4
        with:
          repository: open-telemetry/opentelemetry-collector
          path: opentelemetry-collector
          ref: 'v0.93.0'

      - name: Build ocb
        run: |
          cd opentelemetry-collector
          make ocb

      - name: Build custom otel source code
        run: |
          cd opentelemetry-collector
          ./bin/ocb_linux_amd64 --skip-compilation --config ../manifest.yaml

      - name: Vendor the depedency source code
        run: |
          cd opentelemetry-collector/_build
          go mod vendor

      - name: Copy the new source code
        run: |
          mkdir -p src
          rsync -av --delete opentelemetry-collector/_build/ src/

      - name: Save source code as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: otel-source
          path: opentelemetry-collector/_build
          compression-level: 9

      - name: Commit otel code to the repo
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: main
          FOLDER: src
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SQUASH_HISTORY: false